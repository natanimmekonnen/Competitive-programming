# Problem: Rotate List - https://leetcode.com/problems/rotate-list/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null || k == 0) {
            return head;
        }
        ListNode tail = head;
        ListNode p = head;
        ListNode c = head;
        int len = 0;
        while (tail.next != null) {
            tail = tail.next;
            len++;

        }
        len++;
        tail.next = head;
        k %= len;
        for (int i = 1; i < len - k; i++) {
            p = p.next;

        }
        c = p.next;
        p.next = null;
        return c;

    }
}