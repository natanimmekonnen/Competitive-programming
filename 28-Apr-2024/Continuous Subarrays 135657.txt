# Problem: Continuous Subarrays - https://leetcode.com/problems/continuous-subarrays/

class Solution {
    public long continuousSubarrays(int[] nums) {
        int left = 0, right = 0, j = 0;
        long count = 0;
        for(int i = 0; i < nums.length; i++){
            if(i == 0){
                count ++;
                left = nums[i] - 2;
                right = nums[i] + 2;
            } else if(nums[i] >= left && nums[i] <= right){
                left = Math.max(left, nums[i]-2);
                right = Math.min(right, nums[i]+2);
                count += i - j + 1; 
            } else {
                left = nums[i] - 2;
                right = nums[i] + 2;
                 j = i - 1;
                while(nums[j] >= nums[i] - 2 && nums[j] <= nums[i] + 2){
                    left = Math.max(left, nums[j] - 2);
                    right = Math.min(right, nums[j] + 2);
                    j--;
                }
                j++;
                count += (i-j+1);
            }
        }
        return count;
    }
}