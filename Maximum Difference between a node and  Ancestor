/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int Currentmax=Integer.MIN_VALUE;
    public int maxAncestorDiff(TreeNode root) {
        maxAncest(root,root.val,root.val);
        return Currentmax;
        
    }
    public void maxAncest(TreeNode root, int min,int max)
    {
        if(root==null)
        {
            return;
        }
        min=Math.min(min,root.val);
        max=Math.max(max,root.val);
        Currentmax=Math.max(Currentmax,max-min);
        maxAncest(root.left,min,max);
        maxAncest(root.right,min,max);
    
    }
    
}
