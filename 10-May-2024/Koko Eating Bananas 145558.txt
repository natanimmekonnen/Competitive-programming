# Problem: Koko Eating Bananas - https://leetcode.com/problems/koko-eating-bananas/

class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int left = 1, right = 0;

        for (int i = 0; i < piles.length; i++) {
            right = Math.max(right, piles[i]);
        }
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (isCompatible(mid, h, piles)) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return right;

    }

    public boolean isCompatible(int number, int hours, int[] num) {
        int count = 0;

        for (int i = 0; i < num.length; i++) {
            int point = num[i] / number;
            count += point;
            if (num[i] % number != 0) {
                count++;
            }

        }

        if (count > hours) {

            return false;
        }
        return true;

    }
}