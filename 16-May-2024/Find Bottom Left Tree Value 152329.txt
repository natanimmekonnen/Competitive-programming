# Problem: Find Bottom Left Tree Value - https://leetcode.com/problems/find-bottom-left-tree-value/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max=0,wonder=0;
    public int findBottomLeftValue(TreeNode root) {
     
     bottom(root, 1);
     return wonder;
    }
    public void bottom(TreeNode root, int height){
        if(root==null)
        {
            return;
        }
        if(max<height)
        {
            wonder=root.val;
            max=height;
        }
        bottom(root.left,height+1);
        bottom(root.right,height+1);


    }
}