/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        if(head==null)
        {
            return head;
        }
        Node temp=head;
        
        while(temp!=null)
        {

           Node temp2=temp.next;
           Node temp3=new Node(temp.val);
           temp.next=temp3;
           temp3.next=temp2;
           temp=temp2;

        }
         Node t=head;

        while(t!=null)
        {
            if(t.random!=null)
            {
                t.next.random=t.random.next;
            }
            t=t.next.next;
        }
        Node k=head;
        Node header=head.next;
        Node node=header;

        while(k!=null)
        {
            k.next=k.next.next;
            if(node.next!=null)
            {
                node.next=node.next.next;
            }
            k=k.next;
            node=node.next;


        }
        return header;
        
    }
}
