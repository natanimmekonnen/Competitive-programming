# Problem: Delete Node in a BST - https://leetcode.com/problems/delete-node-in-a-bst/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode deleteNode(TreeNode root, int val) {
        if(root==null)
        {
            return null;
        }
        if(root.val>val)
        {
            root.left=deleteNode(root.left,val);
        }
        else if(root.val<val)
        {
            root.right=deleteNode(root.right,val);
        }
        else
        {
            if(root.left==null&&root.right==null)
            {
                 root=null;
                
            }
             else if(root.left==null)
            {
                TreeNode t=root;
                root=root.right;
                 t=null;
                
            }
              else if(root.right==null)
            {
                TreeNode t=root;
                root=root.left;
                 t=null;
                
            }
            else
            {
                TreeNode t=findmin(root.right);
                root.val=t.val;
                root.right=deleteNode(root.right,t.val);
            }
        }
        return root;
        
    }
    public TreeNode findmin(TreeNode root)
    {
        if(root==null)
        {
            return null;
        }
        if(root.left==null)
        {
            return root;
        }
        return findmin(root.left);
    }
}